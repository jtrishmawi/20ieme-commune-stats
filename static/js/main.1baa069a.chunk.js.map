{"version":3,"sources":["state/constants.js","state/reducer.js","state/index.js","components/Popup/styles.js","components/Popup/charts/Ballot.js","theme.js","components/Popup/index.js","components/Popup/ReactLeafletPopup.js","components/Offices.js","components/Sectors.js","pages/Map.js","pages/Table.js","components/Content.js","components/Loader.js","components/Header.js","App.js","index.js"],"names":["initialState","results","sectors","offices","table","reducer","state","action","type","data","fetchSectors","a","fetch","process","response","json","filteredSectors","features","filter","feature","properties","arrondissement","fetchOffices","filteredOffices","cp","fetchResults","buildTableData","map","result","office","find","Number","num_bv","adresse","lib","tour","StateContext","createContext","useData","useContext","Container","styled","div","props","theme","popup","width","BallotContainer","List","ul","Table","Header","h3","Ballot","casted","white","absentions","useState","setData","useEffect","margin","top","right","bottom","left","startAngle","endAngle","fit","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","enableRadialLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","legends","anchor","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style","Popup","firstRound","setFirstRound","secondRound","setSecondRound","setCasted","setWhite","setAbsentions","first","second","forEach","index","exprimes","votants","inscrits","sort","b","voix","r","key","tete_de_liste","code_nuance","ReactLeafletPopup","L","extend","initialize","options","source","prototype","call","this","reactElement","React","isValidElement","_reactMode","_reactElement","reactComponent","_reactComponent","_reactComponentProps","Util","leafletLayer","_source","reactComponentProps","onRemove","_container","transition","ReactDOM","unmountComponentAtNode","_contentNode","getContent","Error","setContent","content","update","_updateContent","render","fire","tmpReactElement","createElement","Offices","GeoJSON","onEachFeature","layer","bindPopup","Sectors","color","Map","center","lat","lon","zoom","height","TileLayer","url","attribution","columns","name","selector","sortable","searchable","grow","hide","memo","setFilter","filteredItem","setFilteredItem","searchableColumns","useMemo","column","reduce","acc","Filter","inline","className","row","add","Set","size","value","onChange","e","target","option","groupClassName","onClick","useDebounce","Object","values","join","intersection","entries","title","dense","pagination","subHeader","subHeaderComponent","Content","ldsDualRing","keyframes","LoaderElement","Loader","Brand","tag","A","isOpen","setIsOpen","light","full","toggleable","waitChunk","to","navbar","NavLink","withState","WrappedComponent","loading","basename","fluid","exact","path","useReducer","dispatch","useAsync","Promise","all","error","Provider","Icon","Default","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","reset","injectGlobal","document","getElementById"],"mappings":"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","file":"static/js/main.1baa069a.chunk.js","sourcesContent":["export const initialState = {\n  results: [],\n  sectors: [],\n  offices: [],\n  table: [],\n};\n\nexport const LOAD = 'LOAD';","import { LOAD } from './constants';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case LOAD:\n      return state = action.data;\n\n    default:\n      return state;\n  }\n}","import React, { createContext, useContext, useReducer } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { initialState, LOAD } from './constants';\nimport { reducer } from './reducer';\n\n\nconst fetchSectors = async () => {\n  const response = await fetch(`${process.env.PUBLIC_URL}/data/secteurs-des-bureaux-de-vote.geojson`);\n  const sectors = await response.json();\n\n  const filteredSectors = sectors.features.filter(feature => feature.properties.arrondissement === 20);\n\n  return { ...sectors, features: filteredSectors };\n}\n\nconst fetchOffices = async () => {\n  const response = await fetch(`${process.env.PUBLIC_URL}/data/bureaux-de-votes.geojson`);\n  const offices = await response.json();\n\n  const filteredOffices = offices.features.filter(feature => feature.properties.cp === '75020');\n\n  return { ...offices, features: filteredOffices };\n}\n\nconst fetchResults = async () => {\n  const response = await fetch(`${process.env.PUBLIC_URL}/data/resultats.json`);\n  return await response.json();\n}\n\nconst buildTableData = ({ features: offices }, results) => results.map(result => {\n  const office = offices.find(office => Number(office.properties.num_bv) === result.num_bv);\n  const adresse = `${office.properties.lib} - ${office.properties.adresse}`;\n  const tour = result.tour === 1 ? '1er Tour' : '2ième Tour';\n\n  return { ...result, adresse, tour }\n})\n\nconst StateContext = createContext();\n\nexport const withState = WrappedComponent => {\n  const StateProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const { loading, error } = useAsync(async () => {\n      const [sectors, offices, results] = await Promise.all([\n        fetchSectors(),\n        fetchOffices(),\n        fetchResults(),\n      ]);\n\n      const table = buildTableData(offices, results);\n\n      dispatch({\n        type: LOAD,\n        data: { sectors, offices, results, table }\n      });\n    }, [])\n\n    return (\n      <StateContext.Provider value={[state, dispatch]}>\n        <WrappedComponent {...{ props, loading, error }} />\n      </StateContext.Provider>\n    );\n  };\n\n  return StateProvider;\n};\n\nexport const useData = () => useContext(StateContext);","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: ${props => props.theme.popup.width};\n`\n\nexport const BallotContainer = styled.div`\n  height: 200px;\n`\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: space-around;\n  padding: 0;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n\n  th:last-child,\n  td:last-child {\n    text-align: center;\n  }\n`\n\nexport const Header = styled.h3`\ntext-align: center;\n\n  small {\n    display: block;\n  }\n`","import React, { useEffect, useState } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\n\nimport { BallotContainer } from '../styles';\n\nconst Ballot = ({ casted, white, absentions }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData([\n      {\n        \"id\": \"Exprimés\",\n        \"label\": \"Exprimés\",\n        \"value\": casted,\n      },\n      {\n        \"id\": \"Blancs\",\n        \"label\": \"Blancs\",\n        \"value\": white,\n      },\n      {\n        \"id\": \"Abstentions\",\n        \"label\": \"Abstentions\",\n        \"value\": absentions,\n      }\n    ])\n  }, [casted, white, absentions]);\n\n  return (\n    <>\n      <BallotContainer>\n        <ResponsivePie\n          data={data}\n          margin={{ top: 0, right: 0, bottom: 28, left: 0 }}\n          startAngle={-90}\n          endAngle={90}\n          fit={true}\n          innerRadius={0.5}\n          padAngle={1}\n          cornerRadius={3}\n          colors={{ scheme: 'paired' }}\n          borderWidth={1}\n          enableRadialLabels={false}\n          slicesLabelsSkipAngle={10}\n          slicesLabelsTextColor=\"#333333\"\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n          legends={[\n            {\n              anchor: 'bottom',\n              direction: 'row',\n              translateY: 28,\n              itemWidth: 100,\n              itemHeight: 18,\n              itemTextColor: '#999',\n              symbolSize: 18,\n              symbolShape: 'circle',\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ],\n            }\n          ]}\n        />\n      </BallotContainer>\n\n    </>\n  );\n};\n\nexport default Ballot;","const theme = {\n  popup: {\n    width: '300px'\n  }\n};\n\nexport default theme","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport { ThemeProvider } from 'styled-components';\n\nimport Ballot from './charts/Ballot'\n\nimport theme from '../../theme';\nimport { Container, List, Table, Header } from './styles';\n\nimport 'react-tabs/style/react-tabs.css';\n\nconst Popup = ({ office, data }) => {\n  const [firstRound, setFirstRound] = useState([]);\n  const [secondRound, setSecondRound] = useState([]);\n  const [casted, setCasted] = useState(0);\n  const [white, setWhite] = useState(0);\n  const [absentions, setAbsentions] = useState(0);\n\n  useEffect(() => {\n    let first = [];\n    let second = [];\n\n    data.forEach((result, index) => {\n      if (index === 0) {\n        setCasted(result.exprimes);\n        setWhite(result.votants - result.exprimes);\n        setAbsentions(result.inscrits - result.votants);\n      }\n\n      if (result.tour === 1) {\n        first = [result, ...first];\n      } else {\n        second = [result, ...second];\n      }\n    });\n\n    setFirstRound(first.sort((a, b) => b.voix - a.voix));\n    setSecondRound(second.sort((a, b) => b.voix - a.voix));\n  }, [data]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Header>{office.lib}<small>{office.adresse}</small></Header>\n        <Ballot casted={casted} white={white} absentions={absentions} />\n        <List>\n          <li>Exprimés: {casted}</li>\n          <li>Blancs: {white}</li>\n          <li>Abstentions: {absentions}</li>\n        </List>\n        <Tabs>\n          <TabList>\n            <Tab>1er Tour</Tab>\n            <Tab>2ième Tour</Tab>\n          </TabList>\n\n          <TabPanel>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Tête de liste</th>\n                  <th>Parti</th>\n                  <th>Nbre de Voix</th>\n                </tr>\n              </thead>\n              <tbody>\n                {firstRound.map(r => (\n                  <tr key={r.tete_de_liste}>\n                    <td>{r.tete_de_liste}</td>\n                    <td>{r.code_nuance}</td>\n                    <td>{r.voix}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </TabPanel>\n          <TabPanel>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Tête de liste</th>\n                  <th>Parti</th>\n                  <th>Nbre de Voix</th>\n                </tr>\n              </thead>\n              <tbody>\n                {secondRound.map(r => (\n                  <tr key={r.tete_de_liste}>\n                    <td>{r.tete_de_liste}</td>\n                    <td>{r.code_nuance}</td>\n                    <td>{r.voix}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </TabPanel>\n        </Tabs>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Popup;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport L from 'leaflet';\n\nconst REACT_MODE_NONE = 'REACT_MODE_NONE';\nconst REACT_MODE_ELEMENT = 'REACT_MODE_ELEMENT';\nconst REACT_MODE_COMPONENT = 'REACT_MODE_COMPONENT';\n\nconst REACT_RENDERED_EVENTNAME = 'react-rendered';\n\nconst ReactLeafletPopup = L.Popup.extend({\n  initialize(options, source) {\n    L.Popup.prototype.initialize.call(this, options, source);\n\n    if (this.options.reactElement && React.isValidElement(this.options.reactElement)) {\n      this._reactMode = REACT_MODE_ELEMENT;\n      this._reactElement = this.options.reactElement;\n    } else if (this.options.reactComponent) {\n      this._reactMode = REACT_MODE_COMPONENT;\n      this._reactComponent = this.options.reactComponent;\n      this._reactComponentProps = L.Util.extend({\n        leafletLayer: this._source,\n      }, this.options.reactComponentProps);\n    } else {\n      this._reactMode = REACT_MODE_NONE;\n    }\n  },\n\n  onRemove(map) {\n    this._container.style.transition = 'none';\n    ReactDOM.unmountComponentAtNode(this._contentNode);\n    L.Popup.prototype.onRemove.call(this, map);\n  },\n\n  getContent() {\n    if (this._reactMode !== REACT_MODE_NONE) {\n      throw new Error('ReactLeafletPopup: can\\'t get content of a react-rendered popup.');\n    }\n    return L.Popup.prototype.getContent.call(this);\n  },\n\n  setContent(content) {\n    switch (this._reactMode) {\n      case REACT_MODE_NONE:\n        return L.Popup.prototype.setContent.call(this, content);\n\n      case REACT_MODE_ELEMENT:\n        if (!React.isValidElement(content)) {\n          throw new Error('ReactLeafletPopup: Invalid content for ReactElement mode.');\n        }\n        this._reactElement = content;\n        this.update();\n        return this;\n\n      case REACT_MODE_COMPONENT:\n        if (typeof content === 'object') {\n          throw new Error('ReactLeafletPopup: Invalid content for ReactComponent mode.');\n        }\n        this._reactComponentProps = L.Util.extend({\n          leafletLayer: this._source,\n        }, content);\n        this.update();\n        return this;\n\n      default:\n        throw new Error('ReactLeafletPopup: Invalid content for ReactComponent mode.');\n    }\n  },\n\n  setData(data) {\n    return this.setContent(data);\n  },\n\n  _updateContent() {\n    switch (this._reactMode) {\n      case REACT_MODE_NONE: {\n        return L.Popup.prototype._updateContent.call(this);\n      }\n\n      case REACT_MODE_ELEMENT: {\n        ReactDOM.render(this._reactElement, this._contentNode, () => {\n          this.fire(REACT_RENDERED_EVENTNAME);\n        });\n        return this;\n      }\n\n      case REACT_MODE_COMPONENT: {\n        const tmpReactElement = React.createElement(\n          this._reactComponent,\n          this._reactComponentProps\n        );\n        ReactDOM.render(tmpReactElement, this._contentNode, () => {\n          this.fire(REACT_RENDERED_EVENTNAME);\n        });\n        return this;\n      }\n\n      default: {\n        throw new Error('ReactLeafletPopup: Error: unknown react rendering mode');\n      }\n    }\n  },\n});\n\nexport default ReactLeafletPopup;","import React from 'react';\nimport { GeoJSON } from 'react-leaflet';\n\nimport Popup from './Popup';\nimport ReactLeafletPopup from './Popup/ReactLeafletPopup';\n\nconst Offices = ({ offices, results }) => {\n  const handleOfficePopup = ({ properties: office }, layer) => {\n    const data = results.filter(result => result.num_bv === Number(office.num_bv));\n\n    layer.bindPopup(new ReactLeafletPopup({\n      reactComponent: Popup,\n      reactComponentProps: {\n        office,\n        data\n      }\n    }));\n  }\n\n  return <GeoJSON data={offices} onEachFeature={handleOfficePopup} />;\n};\n\nexport default Offices;","import React from 'react';\nimport { GeoJSON } from 'react-leaflet';\n\nconst Sectors = ({ sectors }) => {\n  const styleSectors = feature => {\n    return {\n      color: `hsla(${(((feature.properties.num_bv + 20) % 100) / 100) * 360}, 100%, 50%, 1)`,\n    }\n  }\n\n  return <GeoJSON data={sectors} style={styleSectors} />;\n};\n\nexport default Sectors;","import React from 'react';\nimport { Map as Leaflet, TileLayer } from 'react-leaflet';\n\nimport { useData } from '../state';\n\nimport Offices from '../components/Offices';\nimport Sectors from '../components/Sectors';\n\nconst Map = () => {\n  const [{ results, sectors, offices }] = useData();\n  \n  return (\n    <Leaflet\n      center={{ lat: 48.8649161, lon: 2.3984708 }}\n      zoom={14}\n      style={{ width: '100%', height: '100%', }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png\"\n        attribution='&copy; Openstreetmap France | &copy; <a href=\"https://www.openstreetmap.org/copyright'\n      />\n      <Offices offices={offices} results={results} />\n      <Sectors sectors={sectors} />\n    </Leaflet>\n  );\n};\n\nexport default Map;","import React, { memo, useState, useMemo, useEffect } from 'react';\nimport { Container, Form, FormGroup, Input, Option, InputGroup, InputGroupButton } from '@bootstrap-styled/v4';\nimport DataTable from 'react-data-table-component';\nimport { useDebounce } from 'react-use';\nimport intersection from 'lodash/intersection'\n\nimport { useData } from '../state';\n\nconst columns = [\n  {\n    name: 'Tête de liste',\n    selector: 'tete_de_liste',\n    sortable: true,\n    searchable: true,\n    grow: 2\n  },\n  {\n    name: 'Parti',\n    selector: 'code_nuance',\n    searchable: true,\n    sortable: true,\n  },\n  {\n    name: 'Tour',\n    selector: 'tour',\n    searchable: true,\n    sortable: true,\n  },\n  {\n    name: 'Voix',\n    selector: 'voix',\n    sortable: true,\n  },\n  {\n    name: 'Inscrits',\n    selector: 'inscrits',\n    hide: 'md',\n  },\n  {\n    name: 'Votants',\n    selector: 'votants',\n    hide: 'md',\n  },\n  {\n    name: 'Exprimés',\n    selector: 'exprimes',\n    hide: 'md',\n  },\n  {\n    name: 'Adresse',\n    selector: 'adresse',\n    searchable: true,\n    sortable: true,\n    grow: 3,\n    hide: 'sm',\n  },\n];\n\nconst Table = () => {\n  const [{ table }] = useData();\n  const [filter, setFilter] = useState({});\n  const [filteredItem, setFilteredItem] = useState(table);\n\n  const searchableColumns = useMemo(() => columns.filter(column => column.searchable).map(({ selector, name }) => ({ selector, name })), []);\n\n  useEffect(() => {\n    setFilter(filter => searchableColumns.reduce((acc, { selector }) => acc = { ...acc, ...{ [selector]: '' } }, filter))\n  }, [searchableColumns])\n\n  const Filter = useMemo(\n    () => (\n      <Container>\n        <Form inline className=\"justify-content-between\">\n          {searchableColumns.map(({ selector, name }) => {\n            const options = filteredItem.reduce((acc, row) => acc.add(row[selector]), new Set())\n            return (\n              <FormGroup key={selector} className=\"mr-2\">\n                <InputGroup size=\"sm\">\n                  <Input type=\"select\" name={selector} value={filter[selector]} onChange={e => setFilter(filter => ({ ...filter, ...{ [selector]: e.target.value } }))}>\n                    <Option value=\"\">{name}</Option>\n                    {[...options].map(option => <Option key={option} value={option}>{option}</Option>)}\n                  </Input>\n                  <InputGroupButton color=\"danger\" groupClassName=\"input-group-prepend\" onClick={e => setFilter(filter => ({ ...filter, ...{ [selector]: '' } }))}>&#10007;</InputGroupButton>\n                </InputGroup>\n              </FormGroup>\n            )\n          }\n          )}\n        </Form>\n      </Container>\n    )\n    , [filter, searchableColumns, filteredItem]);\n\n  useDebounce(\n    () => {\n      if (Object.values(filter).join('') === '') {\n        setFilteredItem(table)\n      } else {\n        const result = intersection(...Object.entries(filter).filter(([, value]) => value !== '').map(([name, value]) => table.filter(row => row[name] === value)))\n        setFilteredItem(result)\n      }\n    },\n    350,\n    [filter]\n  );\n\n  return (\n    <DataTable\n      title=\"Resultats par bureau de vote\"\n      columns={columns}\n      data={filteredItem}\n      dense\n      pagination\n      subHeader\n      subHeaderComponent={Filter}\n    />\n  );\n};\n\nexport default memo(Table);","import styled from 'styled-components';\nimport { Container } from '@bootstrap-styled/v4';\n\nconst Content = styled(Container)`\n  && { \n    height: calc(100vh - 56px);\n    padding: 0;\n  }\n`;\n\nexport default Content","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n`\n\nconst ldsDualRing = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderElement = styled.div`\n  display: inline-block;\n  width: 64px;\n  height: 64px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    width: 46px;\n    height: 46px;\n    margin: 1px;\n    border-radius: 50%;\n    border: 5px solid #000;\n    border-color: #000 transparent #000 transparent;\n    animation: ${ldsDualRing} 1.2s linear infinite;\n  }\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <LoaderElement />\n    </Container>\n  );\n};\n\nexport default Loader;","import React, { useState } from 'react';\nimport { Link } from '@yeutech-lab/react-router-dom-utils';\nimport {\n  A,\n  Navbar,\n  Container,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  NavItem,\n  NavLink,\n} from '@bootstrap-styled/v4';\n\nconst Brand = props => <NavbarBrand tag={A} {...props} />\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Navbar color=\"faded\" light full toggleable=\"sm\">\n      <Container>\n        <div className=\"d-flex justify-content-between\">\n          <Link tag={Brand} waitChunk to=\"/\">Municipales 2020</Link>\n          <NavbarToggler onClick={() => setIsOpen(!isOpen)} />\n        </div>\n        <Collapse navbar isOpen={isOpen}>\n          <Nav navbar className=\"mr-auto\">\n            <NavItem>\n              <Link tag={NavLink} waitChunk to=\"/\">Carte</Link>\n            </NavItem>\n            <NavItem>\n              <Link tag={NavLink} waitChunk to=\"/tableau\">Tableau</Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { withState } from './state'\n\nimport Map from './pages/Map'\nimport Table from './pages/Table'\nimport Content from './components/Content';\nimport Loader from './components/Loader';\nimport Header from './components/Header';\n\nfunction App({ loading }) {\n  if (loading) return <Loader />;\n\n  return (\n    <>\n      <Router basename=\"/\">\n        <>\n          <Header />\n          <Content fluid>\n            <Switch>\n              <Route exact path=\"/\">\n                <Map />\n              </Route>\n              <Route path=\"/tableau\">\n                <Table />\n              </Route>\n            </Switch>\n          </Content>\n        </>\n      </Router>\n    </>\n  );\n}\n\nexport default withState(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BootstrapProvider from '@bootstrap-styled/provider';\nimport L from 'leaflet';\n\nimport App from './App';\n\nimport theme from './theme';\n\nimport 'leaflet/dist/leaflet.css';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nReactDOM.render(\n  <BootstrapProvider reset injectGlobal theme={theme}>\n    <App />\n  </BootstrapProvider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}